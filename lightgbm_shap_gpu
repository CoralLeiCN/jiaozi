{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip uninstall shap --yes","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:43:14.060548Z","iopub.execute_input":"2024-08-08T22:43:14.061534Z","iopub.status.idle":"2024-08-08T22:43:15.973613Z","shell.execute_reply.started":"2024-08-08T22:43:14.061495Z","shell.execute_reply":"2024-08-08T22:43:15.972437Z"},"trusted":true},"execution_count":51,"outputs":[{"name":"stdout","text":"\u001b[33mWARNING: Skipping shap as it is not installed.\u001b[0m\u001b[33m\n\u001b[0m","output_type":"stream"}]},{"cell_type":"code","source":"!pip install cuda","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:43:19.291352Z","iopub.execute_input":"2024-08-08T22:43:19.292038Z","iopub.status.idle":"2024-08-08T22:43:21.291020Z","shell.execute_reply.started":"2024-08-08T22:43:19.292002Z","shell.execute_reply":"2024-08-08T22:43:21.289870Z"},"trusted":true},"execution_count":52,"outputs":[{"name":"stdout","text":"\u001b[31mERROR: Could not find a version that satisfies the requirement cuda (from versions: none)\u001b[0m\u001b[31m\n\u001b[0m\u001b[31mERROR: No matching distribution found for cuda\u001b[0m\u001b[31m\n\u001b[0m","output_type":"stream"}]},{"cell_type":"code","source":"from cuml.explainer import KernelExplainer","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:49:38.339277Z","iopub.execute_input":"2024-08-08T22:49:38.340124Z","iopub.status.idle":"2024-08-08T22:49:40.883642Z","shell.execute_reply.started":"2024-08-08T22:49:38.340084Z","shell.execute_reply":"2024-08-08T22:49:40.882850Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"code","source":"!nvidia-smi","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:37:18.625157Z","iopub.execute_input":"2024-08-08T22:37:18.625612Z","iopub.status.idle":"2024-08-08T22:37:19.725097Z","shell.execute_reply.started":"2024-08-08T22:37:18.625568Z","shell.execute_reply":"2024-08-08T22:37:19.723960Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stdout","text":"Thu Aug  8 22:37:19 2024       \n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 550.90.07              Driver Version: 550.90.07      CUDA Version: 12.4     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  Tesla T4                       Off |   00000000:00:04.0 Off |                    0 |\n| N/A   38C    P8              9W /   70W |       3MiB /  15360MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  Tesla T4                       Off |   00000000:00:05.0 Off |                    0 |\n| N/A   38C    P8              9W /   70W |       3MiB /  15360MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n                                                                                         \n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|  No running processes found                                                             |\n+-----------------------------------------------------------------------------------------+\n","output_type":"stream"}]},{"cell_type":"code","source":"# export CUDA_PATH=/usr/local/cuda-10.1/\n!export CUDA_PATH=/usr/local/cuda-12.1","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:21:17.366116Z","iopub.execute_input":"2024-08-08T22:21:17.366459Z","iopub.status.idle":"2024-08-08T22:21:18.371462Z","shell.execute_reply.started":"2024-08-08T22:21:17.366433Z","shell.execute_reply":"2024-08-08T22:21:18.370258Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"!nvcc --version","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:40:21.961566Z","iopub.execute_input":"2024-08-08T22:40:21.962510Z","iopub.status.idle":"2024-08-08T22:40:23.046289Z","shell.execute_reply.started":"2024-08-08T22:40:21.962467Z","shell.execute_reply":"2024-08-08T22:40:23.045328Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"nvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2023 NVIDIA Corporation\nBuilt on Mon_Apr__3_17:16:06_PDT_2023\nCuda compilation tools, release 12.1, V12.1.105\nBuild cuda_12.1.r12.1/compiler.32688072_0\n","output_type":"stream"}]},{"cell_type":"code","source":"!which nvcc","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:40:24.106548Z","iopub.execute_input":"2024-08-08T22:40:24.107379Z","iopub.status.idle":"2024-08-08T22:40:25.120018Z","shell.execute_reply.started":"2024-08-08T22:40:24.107343Z","shell.execute_reply":"2024-08-08T22:40:25.119059Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"/opt/conda/bin/nvcc\n","output_type":"stream"}]},{"cell_type":"code","source":"!ls /usr/local","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:42:05.880403Z","iopub.execute_input":"2024-08-08T22:42:05.881063Z","iopub.status.idle":"2024-08-08T22:42:06.893552Z","shell.execute_reply.started":"2024-08-08T22:42:05.881028Z","shell.execute_reply":"2024-08-08T22:42:06.892574Z"},"trusted":true},"execution_count":50,"outputs":[{"name":"stdout","text":"bin   cuda-12\t etc\tinclude  man\t sbin\tsrc\ncuda  cuda-12.1  games\tlib\t nvidia  share\n","output_type":"stream"}]},{"cell_type":"code","source":"!pip install git+https://github.com/shap/shap.git@v0.46.0","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:30:21.100320Z","iopub.execute_input":"2024-08-08T22:30:21.100708Z","iopub.status.idle":"2024-08-08T22:37:17.614446Z","shell.execute_reply.started":"2024-08-08T22:30:21.100670Z","shell.execute_reply":"2024-08-08T22:37:17.613396Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"Collecting git+https://github.com/shap/shap.git@v0.46.0\n  Cloning https://github.com/shap/shap.git (to revision v0.46.0) to /tmp/pip-req-build-gojq82u_\n  Running command git clone --filter=blob:none --quiet https://github.com/shap/shap.git /tmp/pip-req-build-gojq82u_\n  Running command git checkout -q 9d6031f59fca036cea679f5d3099e5ded9d615d5\n  Resolved https://github.com/shap/shap.git to commit 9d6031f59fca036cea679f5d3099e5ded9d615d5\n  Installing build dependencies ... \u001b[?25ldone\n\u001b[?25h  Getting requirements to build wheel ... \u001b[?25ldone\n\u001b[?25h  Preparing metadata (pyproject.toml) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from shap==0.46.0) (1.26.4)\nRequirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from shap==0.46.0) (1.11.4)\nRequirement already satisfied: scikit-learn in /opt/conda/lib/python3.10/site-packages (from shap==0.46.0) (1.2.2)\nRequirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (from shap==0.46.0) (2.2.2)\nRequirement already satisfied: tqdm>=4.27.0 in /opt/conda/lib/python3.10/site-packages (from shap==0.46.0) (4.66.4)\nRequirement already satisfied: packaging>20.9 in /opt/conda/lib/python3.10/site-packages (from shap==0.46.0) (21.3)\nCollecting slicer==0.0.8 (from shap==0.46.0)\n  Downloading slicer-0.0.8-py3-none-any.whl.metadata (4.0 kB)\nRequirement already satisfied: numba in /opt/conda/lib/python3.10/site-packages (from shap==0.46.0) (0.58.1)\nRequirement already satisfied: cloudpickle in /opt/conda/lib/python3.10/site-packages (from shap==0.46.0) (2.2.1)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging>20.9->shap==0.46.0) (3.1.1)\nRequirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /opt/conda/lib/python3.10/site-packages (from numba->shap==0.46.0) (0.41.1)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas->shap==0.46.0) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas->shap==0.46.0) (2023.3.post1)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas->shap==0.46.0) (2023.4)\nRequirement already satisfied: joblib>=1.1.1 in /opt/conda/lib/python3.10/site-packages (from scikit-learn->shap==0.46.0) (1.4.2)\nRequirement already satisfied: threadpoolctl>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from scikit-learn->shap==0.46.0) (3.2.0)\nRequirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.8.2->pandas->shap==0.46.0) (1.16.0)\nDownloading slicer-0.0.8-py3-none-any.whl (15 kB)\nBuilding wheels for collected packages: shap\n  Building wheel for shap (pyproject.toml) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for shap: filename=shap-0.46.0-cp310-cp310-linux_x86_64.whl size=2837319 sha256=ed87ae807829250562337af104936b1ce36e543d22c2eff6d01d667187ad6881\n  Stored in directory: /tmp/pip-ephem-wheel-cache-rtnkvq_j/wheels/51/49/3c/7816fb25ceacb9ef1754a65923a245a5e673bd2c63f535cef7\nSuccessfully built shap\nInstalling collected packages: slicer, shap\n  Attempting uninstall: slicer\n    Found existing installation: slicer 0.0.7\n    Uninstalling slicer-0.0.7:\n      Successfully uninstalled slicer-0.0.7\nSuccessfully installed shap-0.46.0 slicer-0.0.8\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn import datasets\n# coding: utf-8\nimport datetime\nimport gc\nimport math\nimport os\nimport seaborn as sns\nimport time\nimport warnings\nfrom contextlib import contextmanager\nfrom sklearn.model_selection import train_test_split\n\n\nimport lightgbm as lgb\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom sklearn.metrics import (auc, average_precision_score, confusion_matrix,\n                             mean_squared_error, precision_recall_curve,\n                             roc_curve)\nfrom sklearn.model_selection import KFold, StratifiedKFold\nfrom sklearn.metrics import mean_squared_error","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-08T22:37:19.727515Z","iopub.execute_input":"2024-08-08T22:37:19.727860Z","iopub.status.idle":"2024-08-08T22:37:19.734994Z","shell.execute_reply.started":"2024-08-08T22:37:19.727828Z","shell.execute_reply":"2024-08-08T22:37:19.734112Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/santander-customer-transaction-prediction/train.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:37:19.736216Z","iopub.execute_input":"2024-08-08T22:37:19.736491Z","iopub.status.idle":"2024-08-08T22:37:26.849739Z","shell.execute_reply.started":"2024-08-08T22:37:19.736469Z","shell.execute_reply":"2024-08-08T22:37:26.848935Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"NOT_FEATURES = ['ID_code', 'target']\nFEATURES = [c for c in df.columns if c not in NOT_FEATURES]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:37:26.850968Z","iopub.execute_input":"2024-08-08T22:37:26.851268Z","iopub.status.idle":"2024-08-08T22:37:26.856018Z","shell.execute_reply.started":"2024-08-08T22:37:26.851243Z","shell.execute_reply":"2024-08-08T22:37:26.855111Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"train_df = df[FEATURES].head(500)\ntarget = df['target'].head(500)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:37:26.857192Z","iopub.execute_input":"2024-08-08T22:37:26.857535Z","iopub.status.idle":"2024-08-08T22:37:26.969455Z","shell.execute_reply.started":"2024-08-08T22:37:26.857509Z","shell.execute_reply":"2024-08-08T22:37:26.968661Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"params ={\n    'task': 'train',\n    'boosting': 'gbdt',\n    'objective': 'binary',\n    'learning_rate': 0.1,\n    'early_stopping_round': 50,\n    'device': 'gpu',\n    }","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:37:26.970660Z","iopub.execute_input":"2024-08-08T22:37:26.970959Z","iopub.status.idle":"2024-08-08T22:37:26.975679Z","shell.execute_reply.started":"2024-08-08T22:37:26.970934Z","shell.execute_reply":"2024-08-08T22:37:26.974858Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"%%time\ntrain_x, valid_x, train_y, valid_y = train_test_split(\n    train_df, target, test_size=0.33, random_state=42)       \nlgb_train = lgb.Dataset(train_x,\n                        label=train_y,\n                        free_raw_data=False)\nlgb_test = lgb.Dataset(valid_x,\n                       label=valid_y,\n                       free_raw_data=False)\n\n\nclf = lgb.train(\n                params,\n                lgb_train,\n                valid_sets=[lgb_train, lgb_test],\n                valid_names=['train', 'test'],\n                num_boost_round=10000,\n                )","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:37:26.976730Z","iopub.execute_input":"2024-08-08T22:37:26.977033Z","iopub.status.idle":"2024-08-08T22:37:27.332119Z","shell.execute_reply.started":"2024-08-08T22:37:26.977012Z","shell.execute_reply":"2024-08-08T22:37:27.331155Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"[LightGBM] [Info] Number of positive: 31, number of negative: 304\n[LightGBM] [Info] This is the GPU trainer!!\n[LightGBM] [Info] Total Bins 22421\n[LightGBM] [Info] Number of data points in the train set: 335, number of used features: 200\n[LightGBM] [Info] Using GPU Device: Tesla T4, Vendor: NVIDIA Corporation\n[LightGBM] [Info] Compiling OpenCL Kernel with 256 bins...\n[LightGBM] [Info] GPU programs have been built\n[LightGBM] [Info] Size of histogram bin entry: 8\n[LightGBM] [Info] 200 dense feature groups (0.06 MB) transferred to GPU in 0.000980 secs. 0 sparse feature groups\n[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.092537 -> initscore=-2.283040\n[LightGBM] [Info] Start training from score -2.283040\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\nTraining until validation scores don't improve for 50 rounds\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\nEarly stopping, best iteration is:\n[2]\ttrain's binary_logloss: 0.267866\ttest's binary_logloss: 0.304343\nCPU times: user 455 ms, sys: 122 ms, total: 577 ms\nWall time: 341 ms\n","output_type":"stream"}]},{"cell_type":"code","source":"import shap","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:37:27.335298Z","iopub.execute_input":"2024-08-08T22:37:27.336246Z","iopub.status.idle":"2024-08-08T22:37:27.339877Z","shell.execute_reply.started":"2024-08-08T22:37:27.336218Z","shell.execute_reply":"2024-08-08T22:37:27.338968Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"\ndef lgb_predict(X, model = clf):\n    X_pd = pd.DataFrame(X.get())\n    # Conversion to a DMatrix\n#     full_data = xgb.DMatrix(X, feature_names=features)\n    \n    return model.predict(X_pd)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:55:07.684658Z","iopub.execute_input":"2024-08-08T22:55:07.685280Z","iopub.status.idle":"2024-08-08T22:55:07.689987Z","shell.execute_reply.started":"2024-08-08T22:55:07.685246Z","shell.execute_reply":"2024-08-08T22:55:07.689026Z"},"trusted":true},"execution_count":68,"outputs":[]},{"cell_type":"code","source":"cu_explainer = KernelExplainer(\n    model=lgb_predict,\n    data=train_x.values,\n    is_gpu_model=True,\n    random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:55:08.048642Z","iopub.execute_input":"2024-08-08T22:55:08.049203Z","iopub.status.idle":"2024-08-08T22:55:08.581694Z","shell.execute_reply.started":"2024-08-08T22:55:08.049176Z","shell.execute_reply":"2024-08-08T22:55:08.580920Z"},"trusted":true},"execution_count":69,"outputs":[]},{"cell_type":"code","source":"cu_shap_values = cu_explainer.shap_values(valid_x)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:56:22.458308Z","iopub.execute_input":"2024-08-08T22:56:22.459122Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stderr","text":"Starting from version 23.08, the new 'copy_X' parameter defaults to 'True', ensuring a copy of X is created after passing it to fit(), preventing any changes to the input, but with increased memory usage. This represents a change in behavior from previous versions. With `copy_X=False` a copy might still be created if necessary. Explicitly set 'copy_X' to either True or False to suppress this warning.\nJitify is performing a one-time only warm-up to populate the persistent cache, this may take a few seconds and will be improved in a future release...\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"%%time\nshap.plots.waterfall(shap_values[0])","metadata":{"execution":{"iopub.status.busy":"2024-08-08T22:37:27.556548Z","iopub.execute_input":"2024-08-08T22:37:27.556836Z","iopub.status.idle":"2024-08-08T22:37:27.580366Z","shell.execute_reply.started":"2024-08-08T22:37:27.556812Z","shell.execute_reply":"2024-08-08T22:37:27.579462Z"},"trusted":true},"execution_count":36,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","File \u001b[0;32m<timed eval>:1\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'shap_values' is not defined"],"ename":"NameError","evalue":"name 'shap_values' is not defined","output_type":"error"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}